<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bigMangos-个人主页</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-11T10:43:35.017Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>bigMangos</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo 发布新文章</title>
    <link href="http://yoursite.com/2019/08/11/hello-world/"/>
    <id>http://yoursite.com/2019/08/11/hello-world/</id>
    <published>2019-08-11T10:43:35.017Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-发布新文章"><a href="#Hexo-发布新文章" class="headerlink" title="Hexo 发布新文章"></a>Hexo 发布新文章</h1><p>1.根目录执行 <code>hexo new post [title]</code></p><p>2.<code>source/_post目录下找到title</code> 写文章</p><p>3.执行 <code>(hexo clean) -and (hexo g) -and (hexo s)</code> 本地预览</p><p>4.发布</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit</span><br><span class="line">git push hexo master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-发布新文章&quot;&gt;&lt;a href=&quot;#Hexo-发布新文章&quot; class=&quot;headerlink&quot; title=&quot;Hexo 发布新文章&quot;&gt;&lt;/a&gt;Hexo 发布新文章&lt;/h1&gt;&lt;p&gt;1.根目录执行 &lt;code&gt;hexo new post [title]&lt;/c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>win10小工具</title>
    <link href="http://yoursite.com/2019/08/11/win10%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2019/08/11/win10小工具/</id>
    <published>2019-08-11T10:38:59.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Win10必备！不可错过的神级效率小工具了解下"><a href="#Win10必备！不可错过的神级效率小工具了解下" class="headerlink" title="Win10必备！不可错过的神级效率小工具了解下"></a>Win10必备！不可错过的神级效率小工具了解下</h1><p>2019年距离Win10发布已经过了三年多，Win10的种种功能想必大家都很熟悉了，但有没有觉得日常使用中总有一些细节不够顺手？</p><p>今天小编就为大家推荐几款Win10下的效率小工具，一起来“改造”你的Win10！</p><h2 id="剪贴板不好用？试试PinClipBoard"><a href="#剪贴板不好用？试试PinClipBoard" class="headerlink" title="剪贴板不好用？试试PinClipBoard"></a>剪贴板不好用？试试PinClipBoard</h2><p>从RS5版开始，Win10便引入了云剪切板功能。然而现实生活中，这种跨设备剪切的机率并不高。</p><p>PinClipBoard是一款剪贴板增强工具，Ctrl+Shift+Z调出，双击直接取用。它可以实现更加专业的多重剪切功能，支持文字、图片、网页、文件夹的自动记录。</p><p>主界面上有历史剪贴板展示，也可以手工Pin常用内容。比方说经常用到的文件夹，通过拖拽到“Pin Folder”上完成收藏，等到需要时直接打开Pin Folder就能看到了。</p><h2 id="TrayMond，最小化……到托盘"><a href="#TrayMond，最小化……到托盘" class="headerlink" title="TrayMond，最小化……到托盘"></a>TrayMond，最小化……到托盘</h2><p>Win10的最小化默认是到任务栏，如果打开的窗口过多，管理起来依旧不方便。</p><p>TrayMond是一款能将窗口直接收缩到系统托盘的小工具，整个工具119KB，双击后常驻托盘。遇到需要最小化的程序，按下Win+Shift+Z，即可直接最小化到系统托盘里。</p><p>虽然刚开始需要适应一小会，但用熟之后真的很方便。</p><h2 id="Quicklook，仿MAC快速预览"><a href="#Quicklook，仿MAC快速预览" class="headerlink" title="Quicklook，仿MAC快速预览"></a>Quicklook，仿MAC快速预览</h2><p>MAC的快速预览很多人都见过，回望Win10的“预览”，依旧被抠抠唆唆地安排在窗口右侧，一点也不大气！</p><p>QuickLook是一款仿MAC快速预览的小工具，装好之后，只要选中文件，按下键盘上的空格键，即可预览文件内容。</p><p>QuickLook支持文本、视频、音频、图片、压缩包、Office文档……，换句话说，你电脑上任何一款文件几乎都可以用它预览。</p><p>同时你也可以点击预览窗右上角的按钮直接启动对应程序，非常方便。</p><h2 id="升级Win10日历！优效日历"><a href="#升级Win10日历！优效日历" class="headerlink" title="升级Win10日历！优效日历"></a>升级Win10日历！优效日历</h2><p>Win10为右下角托盘设计了一个新日历，但依旧被吐槽功能太弱，优效日历是Win10原生日历的最佳替代者。</p><p>它有着和Win10原生日历一致的外观界面，支持农历、节日、调休显示，支持日程提醒、万年历、自定义时钟。同时它还集成了定时关机、屏幕截图两大功能，没用过的一定得试一试！</p><h2 id="单独设置每个软件音量！EarTrumpet"><a href="#单独设置每个软件音量！EarTrumpet" class="headerlink" title="单独设置每个软件音量！EarTrumpet"></a>单独设置每个软件音量！EarTrumpet</h2><p>EarTrumpet是一款第三方音量辅助工具，能够解决Win10仅管理电脑整体音量的问题。</p><p>当电脑上同时插有耳机和音箱时，利用它就很方便了。EarTrumpet可以很好地匹配Win10系统，甚至能够自动适配Win10夜间模式。</p><p>安装好后点击或双击托盘图标，就能调整每一款应用的音量了。</p><p>EarTrumpet能够很好地匹配Win10系统，甚至自动适配Win10的夜间模式</p><h2 id="放大镜不好用？BitType了解下"><a href="#放大镜不好用？BitType了解下" class="headerlink" title="放大镜不好用？BitType了解下"></a>放大镜不好用？BitType了解下</h2><p>Win10自带有放大镜，不过都是区域放大，并不是很好用。这款BitType的最大亮点，是只放大当前光标处所在的内容，最大程度降低放大框对于使用者本身的干扰。</p><p>软件设置很简单，只有一个显示延时和放大率的调节，不过由于中文输入法独有的上屏机制，BitType的放大框仅显示最终打出来的汉字，而对于上屏过程就无法显示了。</p><h2 id="SmartTaskBar——窗口最大化时自动隐藏任务栏"><a href="#SmartTaskBar——窗口最大化时自动隐藏任务栏" class="headerlink" title="SmartTaskBar——窗口最大化时自动隐藏任务栏"></a>SmartTaskBar——窗口最大化时自动隐藏任务栏</h2><p>用过MAC的朋友都知道，苹果电脑里的最大化是铺满整个屏幕，而Win10的最大化则仅限于任务栏以外的空间。这款SmartTaskBar的最大看点，是模拟了MAC效果，最大化时自动隐藏任务栏，让窗口真正铺满整个屏幕。</p><h2 id="夜间模式？那就夜间自动切换吧"><a href="#夜间模式？那就夜间自动切换吧" class="headerlink" title="夜间模式？那就夜间自动切换吧"></a>夜间模式？那就夜间自动切换吧</h2><p>Win10的夜间模式大家都用过，好不好这里不说，单一个手工切换问题，入口还辣么深，就已经很反人类了。其实夜间模式嘛，原本就应该夜间自动进入，天亮再自己切换回来。</p><p>Windows Auto-Night Mode的最大看点，是根据时间自动切换Win10的亮/暗主题。</p><p>使用时先将模式切换为“Change automatic”，然后设置一下自动切换的时间，最后点击Apply按钮，就能体验Win10自动切换夜间模式的乐趣了。</p><h2 id="根据温度、电量自动切换壁纸"><a href="#根据温度、电量自动切换壁纸" class="headerlink" title="根据温度、电量自动切换壁纸"></a>根据温度、电量自动切换壁纸</h2><p>Win10的自动换壁纸一直很古板，只有最简单的定时更换。</p><p>Chameleon是一款多条件自动换壁纸工具，允许添加更多的条件，它可以根据时间、电量（电池）、气温、风力、风速……等条件自动切换壁纸。</p><p>使用前，用户先手工指定好各个条件段所需要的壁纸。到了预定条件发生时，壁纸便自动切换了。</p><p>遗憾的是，Chameleon中“气温”与“天气”条件仅支持美国地区，国内只能玩一玩“电量”和“时间”这两个指标。</p><h2 id="任务栏居中！MAC？FalconX"><a href="#任务栏居中！MAC？FalconX" class="headerlink" title="任务栏居中！MAC？FalconX"></a>任务栏居中！MAC？FalconX</h2><p>众所周知，MAC的一大特点就是Dock栏居中。当然Win10的设计不一样，风格表现也差异巨大。</p><p>但如果你依旧钟情于MAC感觉的话，不妨试一试这款名叫FalconX的小工具。双击启动后，当前打开的程序便会自动居中到任务栏中央。</p><p>而且这个居中只影响正在打开的程序及文件，对于开始菜单及右侧输入法、时间托盘是没有任何影响的。</p><p><a href="https://chrisandriessen.nl/web/FalconX.html" target="_blank" rel="noopener">FalconX</a></p><h2 id="VolPI—托盘图标直接显示音量数值"><a href="#VolPI—托盘图标直接显示音量数值" class="headerlink" title="VolPI—托盘图标直接显示音量数值"></a>VolPI—托盘图标直接显示音量数值</h2><p>Win10能够显示音量大小，但必须要先点击一下才能看到。VOLPI的最大作用，是将音量百分比值直接显示在系统托盘处。</p><p>而且你可以通过鼠标，随意更改音量参数在系统托盘里的位置，比如直接放置到音量按钮后面。唯一不满意的地方是，这里只显示一个单独的数字，要是能再加上一个“%”符号就完美了。</p><h2 id="30秒后自动取消大写键！CapsUnlocker"><a href="#30秒后自动取消大写键！CapsUnlocker" class="headerlink" title="30秒后自动取消大写键！CapsUnlocker"></a>30秒后自动取消大写键！CapsUnlocker</h2><p>Caps Lock大家都用过，因为忘关它引发的麻烦还不少。CapsUnlocker的最大作用，就是一段时间后自动取消Caps Lock键的锁定状态，相当于给Caps Lock做了一个自动计时器。</p><p>当然标题里的30秒是小编自己起的，事实上你可以根据自己的需要，自由控制Caps Lock键的自动取消时间。</p><h2 id="换掉默认看图器——123来了"><a href="#换掉默认看图器——123来了" class="headerlink" title="换掉默认看图器——123来了"></a>换掉默认看图器——123来了</h2><p>Win10自带的看图工具越来越强大，但速度一直是个问题。123看图器是一款UWP版小工具，最大特点就是快！</p><p>常见的JPG、PNG自不用说，50-60MB的PSD也能瞬间打开。此外它的格式支持也很丰富，JPG、PNG、TIFF、GIF、BMP、PSD、RAW……几乎所有常见的图片格式都能搞定。</p><p>而且它还内置了几项简易的图片编辑功能，对付一般应用完全没有问题。</p><h2 id="定时调节系统音量——Volume-Concierge"><a href="#定时调节系统音量——Volume-Concierge" class="headerlink" title="定时调节系统音量——Volume Concierge"></a>定时调节系统音量——Volume Concierge</h2><p>一般我们会在白天的时候将电脑音量调高以便听得更清晰，而在夜间相应降低以免影响其他人休息。但这种纯手工操作，无疑是十分麻烦的。</p><p>Volume Concierge是一款系统音量定时调节工具，可以分别为白天和夜晚设置不同的音量值，软件支持多组规则，开启后能够在时间到达时自动启用。</p><p>甚至你还可以根据需要，设置为每天或工作日、周末生效，方便极了。</p><h2 id="多屏必备！ShowDesktop-Per-Monitor"><a href="#多屏必备！ShowDesktop-Per-Monitor" class="headerlink" title="多屏必备！ShowDesktop Per Monitor"></a>多屏必备！ShowDesktop Per Monitor</h2><p>用过多屏的小伙伴都知道，Win+D这个Windows神键除了能将当前屏幕的窗口最小化之外，也能干掉其他屏幕上的窗口。</p><p>但很多时候，我们并不希望其他屏幕中的窗口受其影响。ShowDesktopPerMonitor是一款多屏幕最小化限制软件，启动后会自动将Win+D限定在当前屏幕。</p><p>当你同时使用多个屏幕时，可以保证其他屏幕下的窗口不受其影响。</p><h2 id="Knowte！记事本换了吧"><a href="#Knowte！记事本换了吧" class="headerlink" title="Knowte！记事本换了吧"></a>Knowte！记事本换了吧</h2><p>Knowte是一款Win10风格的记事本软件，功能简单却很实用。</p><p>和Win10自带的记事本相比，Knowte支持多笔记本，输入特定单词，Knowte能动态过滤出你所要查找的笔记。</p><p>同时Knowte支持对笔记分类，顶部工具栏可以根据时间进行筛选。同时笔记内容也支持简单的格式设置，还有项目编号及链接功能。</p><p>对了，Knowte还支持Win10的流畅化设计，和操作系统放一起，很配哦~</p><h2 id="一屏“看”尽硬盘里所有电影"><a href="#一屏“看”尽硬盘里所有电影" class="headerlink" title="一屏“看”尽硬盘里所有电影"></a>一屏“看”尽硬盘里所有电影</h2><p>HamMultiPlayer是一款非常有意思的软件，它的最大特点是能够将硬盘里的所有电影，全部显示在同一个屏幕内。</p><p>软件提供了列表视图、双拼视图、全屏视图、快速视图，四组界面布局，支持影片搜索、排序、删除、移动，甚至你还可以把它应用在多显示器平台中。</p><p>不过HamMultiPlayer在首次使用时会有一点点卡，日常应用就没有问题了。</p><h2 id="定时切换屏幕“护眼模式”"><a href="#定时切换屏幕“护眼模式”" class="headerlink" title="定时切换屏幕“护眼模式”"></a>定时切换屏幕“护眼模式”</h2><p>Win10的夜间模式很突兀（过渡时间太短），同时无法对个别软件设置例外，这对于搞设计的小伙伴会有一点点麻烦（如PS、AI、PR等设计工具在夜间模式下会出现偏色）。</p><p>Twilight（暮光）则是一款更专业的夜间模式软件，从18:00到次日7:00，Twilight会自动切换至夜间模式，用户可以自己定义白天及夜间的色温值。</p><p>值得一提的是，Twilight允许用户自定义日夜过渡时间，而且时间会比较长（最短30分钟），这样切换过程中就不会让人感觉到很突兀。</p><p>同时你也可以把某些软件设为例外，这样当打开这些软件时，Twilight就不会对其应用夜间色温，从而保证色彩准确。</p><h2 id="错误窗口内容也能复制！Textify"><a href="#错误窗口内容也能复制！Textify" class="headerlink" title="错误窗口内容也能复制！Textify"></a>错误窗口内容也能复制！Textify</h2><p>以往遇到Windows出错自己无法解决时，小编都是手工一个字一个字地将错误信息敲入搜索引擎查询答案。而这款Textify的最大看点，是可以将错误框里的提示文字直接复制下来。</p><p>软件使用很简单，在需要复制的地方按下快捷键Shift+鼠标中键，光标所在处即会立即变成文本状态供你复制。同时你也可以根据需要修改默认快捷键，怎么用随你！</p><h2 id="备份开始菜单布局"><a href="#备份开始菜单布局" class="headerlink" title="备份开始菜单布局"></a>备份开始菜单布局</h2><p>Win10的开始菜单越用越顺手，尤其是将一些常用软件做成磁贴，调用起来效率很高。</p><p>问题是，Win10本身是无法备份菜单布局的，每次重装完系统后，都要重新设置一遍开始菜单。</p><p>Backup Start Menu Layout听名字就知道干什么用，开启软件后，点击第二个按钮“Create Backup”可以立即备份当前开始菜单。</p><p>等到重装系统后，双击备份文件，眨眼间就能将先前的开始菜单恢复回来了。</p><h2 id="复制内容直接保存成文件"><a href="#复制内容直接保存成文件" class="headerlink" title="复制内容直接保存成文件"></a>复制内容直接保存成文件</h2><p>将一段文字保存成文件，对于Win10来说是蛮复杂的。复制文字→打开记事本→Ctrl+V粘贴→Ctrl+S保存文件，即便是熟练者，半分钟时间也算是快手了。</p><p>PasteEx是一款右键增强工具，安装完成后，首先复制目标文本，然后在需要的地方右击鼠标→“粘贴为文件”，即可直接生成文本文件。</p><p>PasteEx支持HTML、代码、富文本、图片，甚至还有一个快捷键，复制目标内容，按下Ctrl+Alt+X，一份文件便新建完成。</p><ul><li>转自太平洋电脑网</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Win10必备！不可错过的神级效率小工具了解下&quot;&gt;&lt;a href=&quot;#Win10必备！不可错过的神级效率小工具了解下&quot; class=&quot;headerlink&quot; title=&quot;Win10必备！不可错过的神级效率小工具了解下&quot;&gt;&lt;/a&gt;Win10必备！不可错过的神级效率
      
    
    </summary>
    
      <category term="技巧" scheme="http://yoursite.com/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="win10" scheme="http://yoursite.com/tags/win10/"/>
    
      <category term="小工具" scheme="http://yoursite.com/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Swap file</title>
    <link href="http://yoursite.com/2019/08/11/Swap-file/"/>
    <id>http://yoursite.com/2019/08/11/Swap-file/</id>
    <published>2019-08-11T07:49:34.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Swap-file"><a href="#Swap-file" class="headerlink" title="Swap file"></a>Swap file</h2><p>As an alternative to creating an entire partition, a swap file offers the ability to vary its size on-the-fly, and is more easily removed altogether. This may be especially desirable if disk space is at a premium (e.g. a modestly-sized SSD).</p><p><strong>Warning:</strong> <a href="https://wiki.archlinux.org/index.php/Btrfs" title="Btrfs" target="_blank" rel="noopener">Btrfs</a> supports swap file with limitations since Linux kernel version 5.0. See <a href="https://wiki.archlinux.org/index.php/Btrfs#Swap_file" title="Btrfs" target="_blank" rel="noopener">Btrfs#Swap file</a> for more information.</p><h3 id="Manually"><a href="#Manually" class="headerlink" title="Manually"></a>Manually</h3><h4 id="Swap-file-creation"><a href="#Swap-file-creation" class="headerlink" title="Swap file creation"></a>Swap file creation</h4><p>For copy-on-write file systems like <a href="https://wiki.archlinux.org/index.php/Btrfs" title="Btrfs" target="_blank" rel="noopener">Btrfs</a>, first create a zero length file, set the <code>No_COW</code> attribute on it with <a href="https://wiki.archlinux.org/index.php/Chattr" title="Chattr" target="_blank" rel="noopener">chattr</a>, and make sure compression is disabled:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">truncate -s 0 /swapfile</span><br><span class="line">chattr +C /swapfile</span><br><span class="line">btrfs property set /swapfile compression none</span><br></pre></td></tr></table></figure><p>See <a href="https://wiki.archlinux.org/index.php/Btrfs#Swap_file" title="Btrfs" target="_blank" rel="noopener">Btrfs#Swap file</a> for more information.</p><p>Use <code>fallocate</code> to create a swap file the size of your choosing (M = <a href="https://en.wikipedia.org/wiki/Mebibyte" title="wikipedia:Mebibyte" target="_blank" rel="noopener">Mebibytes</a>, G = <a href="https://en.wikipedia.org/wiki/Gibibyte" title="wikipedia:Gibibyte" target="_blank" rel="noopener">Gibibytes</a>). For example, creating a 512 MiB swap file:</p><p><code>fallocate -l 512M /swapfile</code></p><p><strong>Note:</strong> <em>fallocate</em> may cause problems with some file systems such as <a href="https://wiki.archlinux.org/index.php/F2FS" title="F2FS" target="_blank" rel="noopener">F2FS</a>.<a href="https://github.com/karelzak/util-linux/issues/633" target="_blank" rel="noopener">[1]</a> As an alternative, using <em>dd</em> is more reliable, but slower:</p><p><code>dd if=/dev/zero of=/swapfile bs=1M count=512 status=progress</code></p><p>Set the right permissions (a world-readable swap file is a huge local vulnerability):</p><p><code>chmod 600 /swapfile</code></p><p>After creating the correctly sized file, format it to swap:</p><p><code>mkswap /swapfile</code></p><p>Activate the swap file:</p><p><code>swapon /swapfile</code></p><p>Finally, edit the fstab configuration to add an entry for the swap file:</p><p><code>/etc/fstab</code></p><p><code>/swapfile none swap defaults 0 0</code></p><p>For additional information, see <a href="https://wiki.archlinux.org/index.php/Fstab#Usage" title="Fstab" target="_blank" rel="noopener">fstab#Usage</a>.</p><p><strong>Note:</strong> The swap file must be specified by its location on the file system not by its UUID or LABEL.</p><h4 id="Remove-swap-file"><a href="#Remove-swap-file" class="headerlink" title="Remove swap file"></a>Remove swap file</h4><p>To remove a swap file, it must be turned off first and then can be removed:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff /swapfile</span><br><span class="line">rm -f /swapfile</span><br></pre></td></tr></table></figure><p>Finally remove the relevant entry from <code>/etc/fstab</code>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Swap-file&quot;&gt;&lt;a href=&quot;#Swap-file&quot; class=&quot;headerlink&quot; title=&quot;Swap file&quot;&gt;&lt;/a&gt;Swap file&lt;/h2&gt;&lt;p&gt;As an alternative to creating an entire pa
      
    
    </summary>
    
      <category term="技巧" scheme="http://yoursite.com/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="swap" scheme="http://yoursite.com/tags/swap/"/>
    
      <category term="标签3" scheme="http://yoursite.com/tags/%E6%A0%87%E7%AD%BE3/"/>
    
  </entry>
  
  <entry>
    <title>dd命令</title>
    <link href="http://yoursite.com/2019/08/11/dd%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/08/11/dd命令/</id>
    <published>2019-08-11T07:47:36.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dd"><a href="#dd" class="headerlink" title="dd"></a>dd</h1><p>复制文件并对原文件的内容进行转换和格式化处理</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>dd命令</strong> 用于复制文件并对原文件的内容进行转换和格式化处理。dd命令功能很强大的，对于一些比较底层的问题，使用dd命令往往可以得到出人意料的效果。用的比较多的还是用dd来备份裸设备。但是不推荐，如果需要备份oracle裸设备，可以使用rman备份，或使用第三方软件备份，使用dd的话，管理起来不太方便。</p><p>建议在有需要的时候使用dd 对物理磁盘操作，如果是文件系统的话还是使用tar backup cpio等其他命令更加方便。另外，使用dd对磁盘操作时，最好使用块设备文件。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd(选项)</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bs=&lt;字节数&gt;：将ibs（输入）与obs（输出）设成指定的字节数；</span><br><span class="line">cbs=&lt;字节数&gt;：转换时，每次只转换指定的字节数；</span><br><span class="line">conv=&lt;关键字&gt;：指定文件转换的方式；</span><br><span class="line">count=&lt;区块数&gt;：仅读取指定的区块数；</span><br><span class="line">ibs=&lt;字节数&gt;：每次读取的字节数；</span><br><span class="line">obs=&lt;字节数&gt;：每次输出的字节数；</span><br><span class="line">of=&lt;文件&gt;：输出到文件；</span><br><span class="line">seek=&lt;区块数&gt;：一开始输出时，跳过指定的区块数；</span><br><span class="line">skip=&lt;区块数&gt;：一开始读取时，跳过指定的区块数；</span><br><span class="line">--help：帮助；</span><br><span class="line">--version：显示版本信息。</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost text]# dd if=/dev/zero of=sun.txt bs=1M count=1</span><br><span class="line">1+0 records in</span><br><span class="line">1+0 records out</span><br><span class="line">1048576 bytes (1.0 MB) copied, 0.006107 seconds, 172 MB/s</span><br><span class="line"></span><br><span class="line">[root@localhost text]# du -sh sun.txt </span><br><span class="line">1.1M    sun.txt</span><br></pre></td></tr></table></figure><p>该命令创建了一个1M大小的文件sun.txt，其中参数解释：</p><ul><li><strong>if</strong> 代表输入文件。如果不指定if，默认就会从stdin中读取输入。</li><li><strong>of</strong> 代表输出文件。如果不指定of，默认就会将stdout作为默认输出。</li><li><strong>bs</strong> 代表字节为单位的块大小。</li><li><strong>count</strong> 代表被复制的块数。</li><li><strong>/dev/zero</strong> 是一个字符设备，会不断返回0值字节（\0）。</li></ul><p>块大小可以使用的计量单位表</p><table><thead><tr><th>单元大小</th><th>代码</th></tr></thead><tbody><tr><td>字节（1B）</td><td>c</td></tr><tr><td>字节（2B）</td><td>w</td></tr><tr><td>块（512B）</td><td>b</td></tr><tr><td>千字节（1024B）</td><td>k</td></tr><tr><td>兆字节（1024KB）</td><td>M</td></tr><tr><td>吉字节（1024MB）</td><td>G</td></tr></tbody></table><p>以上命令可以看出dd命令来测试内存操作速度：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1048576 bytes (1.0 MB) copied, 0.006107 seconds, 172 MB/s</span><br></pre></td></tr></table></figure><p><strong>生成随机字符串</strong></p><p>我们甚至可以使用 /dev/urandom 设备配合 dd 命令 来获取随机字符串。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# dd if=/dev/urandom bs=1 count=15|base64 -w 0</span><br><span class="line">15+0 records in</span><br><span class="line">15+0 records out</span><br><span class="line">15 bytes (15 B) copied, 0.000111993 s, 134 kB/s</span><br><span class="line">wFRAnlkXeBXmWs1MyGEs</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;dd&quot;&gt;&lt;a href=&quot;#dd&quot; class=&quot;headerlink&quot; title=&quot;dd&quot;&gt;&lt;/a&gt;dd&lt;/h1&gt;&lt;p&gt;复制文件并对原文件的内容进行转换和格式化处理&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;header
      
    
    </summary>
    
      <category term="技能" scheme="http://yoursite.com/categories/%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="命令" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>主板说明书找不到-机箱连线照样秒安装</title>
    <link href="http://yoursite.com/2019/08/11/%E4%B8%BB%E6%9D%BF%E8%AF%B4%E6%98%8E%E4%B9%A6%E6%89%BE%E4%B8%8D%E5%88%B0-%E6%9C%BA%E7%AE%B1%E8%BF%9E%E7%BA%BF%E7%85%A7%E6%A0%B7%E7%A7%92%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2019/08/11/主板说明书找不到-机箱连线照样秒安装/</id>
    <published>2019-08-11T01:47:01.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主板说明书找不到-机箱连线照样秒安装"><a href="#主板说明书找不到-机箱连线照样秒安装" class="headerlink" title="主板说明书找不到 机箱连线照样秒安装"></a>主板说明书找不到 机箱连线照样秒安装</h1><p>转载：<a href="http://www.cfan.com.cn/2019/0809/132849.shtml" target="_blank" rel="noopener">cfan-主板说明书找不到 机箱连线照样秒安装</a></p><p>小伙伴们在安装、升级电脑的时候，在主板上安装各种配件应该问题不大，但是连线呢？特别是机箱上那些细碎的小接口们，即使照着说明书都要琢磨半天，如果是老主板，一下子找不到说明书怎么办？这里小编就跟大家说一些简单的办法，常见主板完全可以不看说明书，迅速连接，之后在开机下载电子版，仔细研究说明书也不迟嘛。</p><p>能开机当然是第一位的，咱们先找到面板按键的针脚，一般在主板离处理器接口最远的角落，写着front panel或者简写为F Panel、Panel、JFP1等的那一块针脚。看不清小字，没问题，注意缺针的那一边，把Power（开关）针脚直接装到缺针边，最靠近缺针位置就好，它的对面就是Reset（重启）针脚。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093559769_17133.jpg"><p>另外紧挨着Power针脚的是Power LED（电源灯），而Power LED对面则是HD LED（硬盘灯）。这两个灯有时会标注正负极，一般不用太在意。你说一定得插得最正确才满意？那就记住，靠近缺针的那边统统是负极（-），另一边当然是（+）。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093559561_30863.jpg"><p>然后是处理器风扇接口，它一般在紧挨着处理器接口的主板边缘，为四个一排的针脚，其中三个针脚的对面有一块塑料“墙”。有时在处理器旁边有两组紧挨着的针脚，大家可以任选一个，非得选“主”接口的话，一般是更靠近处理器插槽的那组。连接时注意让风扇接口上的凹形区域对准针脚边的塑料“墙”就好。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093559353_16059.jpg"><p>这三个针脚最重要，一定要先装好再看其他的，比如前置USB 2.0接口，它和前面板按键针脚很像，也是4+5针，也在主板边缘。它们最简单的区别就是，USB 2.0针脚缺针的那边是朝向主板外的，而前面板针脚缺针一边朝里。连接它的时候要注意缺针位置，针脚对应孔洞，缺针位置对应被堵死的孔就行。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093559146_835.jpg"><p>USB 3.0呢，也很好找，在主板边缘挺长的一组针脚，周围还会有塑料“围墙”。连接的时候不用看针脚缺口，注意“围墙”的缺口和连线接口的定位凸起对应就不会插错。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093558936_5452.jpg"><p>音频接口的针脚不一定在主板边缘，而是靠近音频芯片和音频电路，一般在主板比较靠外侧的PCI e插槽附近，它的针脚数量介于USB 2.0、3.0之间，缺针部位在中央，连接的时候注意看好缺针位置，和接口上被堵住的位置对应就行了。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093558729_23042.jpg"><p>最后说说两种新兴的针脚，RGB灯效和USB 3.1（3.2）Type-C。RGB灯效针脚有5V和12V两种。两者都是4针一排，但12V RGB是4针都在，而5V RGB是中间缺一针的，安装时一定要注意区别。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093558421_1564.jpg"><p>至于USB 3.1（3.2）Type-C，它的外形其实很特别，很好认。只是大部分主板只在它旁边只标注为USB扩展，而现在带USB Type-C接口的机箱又不多，会让很多小伙伴奇怪为啥自己的所有USB扩展接口都插不进去，一定注意千万别硬插。</p><img src="/2019/08/11/主板说明书找不到-机箱连线照样秒安装/20190811093558148_2255.jpg"><p>怎么样，只要注意观察，这些最主要的机箱扩展针脚都可以一眼识别，快速安装。小伙伴们在安装之后一定也会牢牢记住它们吧，咱们全拆下来再装一次怎么样？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;主板说明书找不到-机箱连线照样秒安装&quot;&gt;&lt;a href=&quot;#主板说明书找不到-机箱连线照样秒安装&quot; class=&quot;headerlink&quot; title=&quot;主板说明书找不到 机箱连线照样秒安装&quot;&gt;&lt;/a&gt;主板说明书找不到 机箱连线照样秒安装&lt;/h1&gt;&lt;p&gt;转载：&lt;a 
      
    
    </summary>
    
      <category term="技能" scheme="http://yoursite.com/categories/%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="电脑" scheme="http://yoursite.com/tags/%E7%94%B5%E8%84%91/"/>
    
      <category term="装机" scheme="http://yoursite.com/tags/%E8%A3%85%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>frp配置指南</title>
    <link href="http://yoursite.com/2019/08/10/frp%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2019/08/10/frp配置指南/</id>
    <published>2019-08-10T13:53:23.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="frp配置指南"><a href="#frp配置指南" class="headerlink" title="frp配置指南"></a>frp配置指南</h1><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><p><code>cd /usr/share/</code></p><p>到 <a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">frp</a> 下载最新版</p><p><code>wget https://github.com/fatedier/frp/releases/download/v0.28.2/frp_0.28.2_linux_amd64.tar.gz</code></p><p>解压 <code>tar -zxvf frp_0.28.2_linux_amd64.tar.gz</code></p><p>改名 <code>mv frp_0.28.2_linux_amd64 frp</code></p><p><code>cd frp</code></p><p>删除客户端配置文件</p><p><code>rm -f frpc frpc_full.ini frpc.ini</code></p><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><p><code>vim frps.ini</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">bind_port = 7000</span><br><span class="line">bind_udp_port = 7001</span><br><span class="line">kcp_bind_port = 7000</span><br><span class="line"># 域名访问内网的web服务，需要将域名解析到服务器，A记录或者CNAME记录</span><br><span class="line">vhost_http_port = 80</span><br><span class="line">vhost_https_port = 443</span><br><span class="line">dashboard_port = 7500</span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = 123456</span><br><span class="line"># frp服务端和客户端通过bind_port端口进行认证的token，服务端和客户端要一致</span><br><span class="line">token = 123456789</span><br><span class="line">privilege_allow_ports = 1-65535</span><br><span class="line">max_pool_count = 100</span><br><span class="line">authentication_timeout = 60</span><br><span class="line">subdomain_host = example.com</span><br></pre></td></tr></table></figure><h3 id="3-运行"><a href="#3-运行" class="headerlink" title="3.运行"></a>3.运行</h3><p>后台运行</p><p> <code>nohup ./frps -c ./frps.ini &gt;/dev/null 2&gt;&amp;1 &amp;</code></p><h2 id="域名解析到服务器"><a href="#域名解析到服务器" class="headerlink" title="域名解析到服务器"></a>域名解析到服务器</h2><p>需要域名访问，需要将二级域名解析到服务器</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><h3 id="1-配置解析common字段"><a href="#1-配置解析common字段" class="headerlink" title="1.配置解析common字段"></a>1.配置解析common字段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">#和frps底层通信的信息，和bind_addr = 0.0.0.0 bind_port = 7000 保持一致</span><br><span class="line">server_addr = 0.0.0.0</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">#frpc通过代理去连接frps。http或socks5代理方式</span><br><span class="line">#http_proxy = http://user:passwd@192.168.1.128:8080</span><br><span class="line">http_proxy = socks5://user:passwd@192.168.1.128:1080</span><br><span class="line"></span><br><span class="line">#日志文件</span><br><span class="line">log_file = ./frpc.log</span><br><span class="line"></span><br><span class="line">#日志等级 trace, debug, info, warn, error</span><br><span class="line">log_level = info</span><br><span class="line"></span><br><span class="line">#日志最大保留天数</span><br><span class="line">log_max_days = 3</span><br><span class="line"></span><br><span class="line">#和frps底层通信认证token和frps一致</span><br><span class="line">token = 12345678</span><br><span class="line"></span><br><span class="line">#热加载frpc配置使用 frpc reload -c ./frpc.ini</span><br><span class="line">admin_addr = 127.0.0.1</span><br><span class="line">admin_port = 7400</span><br><span class="line">admin_user = admin</span><br><span class="line">admin_pwd = admin</span><br><span class="line"></span><br><span class="line">#和frps刚开始通信时建立的连接数量</span><br><span class="line">pool_count = 5</span><br><span class="line"></span><br><span class="line">#开启tcp多路复用 和frps一致</span><br><span class="line">tcp_mux = true</span><br><span class="line"></span><br><span class="line">#加入frpc标识，下面的模块使用 如 your_name.ssh</span><br><span class="line">user = your_name</span><br><span class="line"></span><br><span class="line">#frpc和frps登陆失败后是否继续持续登陆</span><br><span class="line">login_fail_exit = true</span><br><span class="line"></span><br><span class="line">#和frps通信的底层协议 tcp kcp websocket,  默认是 tcp</span><br><span class="line">protocol = tcp</span><br><span class="line"></span><br><span class="line">#frpc使用的dns服务器</span><br><span class="line"># dns_server = 8.8.8.8</span><br><span class="line"></span><br><span class="line">#frpc中启动的代理模块，模式都启动</span><br><span class="line"># start = ssh,dns</span><br><span class="line"></span><br><span class="line">#ssh代理模块</span><br><span class="line">[ssh]</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">#dns代理模块</span><br><span class="line">[dns]</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="2-代理模块配置"><a href="#2-代理模块配置" class="headerlink" title="2.代理模块配置"></a>2.代理模块配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">#代理模块名称，可以存在多个代理模块</span><br><span class="line">[ssh]</span><br><span class="line"></span><br><span class="line">#代理模块类型</span><br><span class="line">#支持 tcp | udp | http | https | stcp | xtcp, 默认是is tcp</span><br><span class="line">type = tcp</span><br><span class="line"></span><br><span class="line">#客户端本地多要代理的地址和端口</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line"></span><br><span class="line">#对本地unix监听</span><br><span class="line">#添加插件</span><br><span class="line">plugin = unix_domain_socket</span><br><span class="line">#sock位置</span><br><span class="line">plugin_unix_path = /var/run/docker.sock</span><br><span class="line"></span><br><span class="line">#底层通信中是否加密 默认不加密</span><br><span class="line">use_encryption = false</span><br><span class="line">#底层通信信息是否压缩</span><br><span class="line">use_compression = false</span><br><span class="line"></span><br><span class="line">#映射到frps上的远程端口，0为随机端口，由frps来指配</span><br><span class="line">remote_port = 6001</span><br><span class="line"></span><br><span class="line">#端口组映射,需要添加“range:”前缀 tcp udp都可以</span><br><span class="line">[range:abc]</span><br><span class="line">local_port = 6010-6020,6022,6024-6028</span><br><span class="line">remote_port = 6010-6020,6022,6024-6028</span><br><span class="line"></span><br><span class="line">#frpc的负载均衡，就是说一个frps映射多个frpc本地端口，</span><br><span class="line">[test1]</span><br><span class="line">type = tcp</span><br><span class="line">local_port = 8080</span><br><span class="line">#remote_port要一致</span><br><span class="line">remote_port = 80</span><br><span class="line">#group group_key 要一致</span><br><span class="line">group = web</span><br><span class="line">group_key = 123</span><br><span class="line">[test2]</span><br><span class="line">type = tcp</span><br><span class="line">local_port = 8081</span><br><span class="line">#remote_port要一致</span><br><span class="line">remote_port = 80</span><br><span class="line">#group group_key 要一致</span><br><span class="line">group = web</span><br><span class="line">group_key = 123</span><br><span class="line"></span><br><span class="line">#frpc健康检查</span><br><span class="line">#支持tcp和http</span><br><span class="line">health_check_type = tcp</span><br><span class="line">#连接本地端口服务超时</span><br><span class="line">health_check_timeout_s = 3</span><br><span class="line">#失败多少次就剔除该代理本地端口</span><br><span class="line">health_check_max_failed = 3</span><br><span class="line">#检查频率</span><br><span class="line">health_check_interval_s = 10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#http基本配置</span><br><span class="line">[web01]</span><br><span class="line">type = http</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 80</span><br><span class="line"></span><br><span class="line">#加入http认证</span><br><span class="line">http_user = admin</span><br><span class="line">http_pwd = admin</span><br><span class="line"></span><br><span class="line">#泛解析使用</span><br><span class="line">subdomain = web01</span><br><span class="line">#单个域名使用</span><br><span class="line">custom_domains = web02.yourdomain.com</span><br><span class="line"></span><br><span class="line">#web02.yourdomain.com/pic 到这个服务</span><br><span class="line">locations = /pic,/abc</span><br><span class="line">#修改请求头，web02.yourdomain.com会在访问本地网络的时候修改为example.com</span><br><span class="line">host_header_rewrite = example.com</span><br><span class="line">#header_开头后面的东东会添加到http请求头中</span><br><span class="line">header_X-From-Where = frp</span><br><span class="line"></span><br><span class="line">#http健康检查</span><br><span class="line">health_check_type = http</span><br><span class="line">#请求健康检查的位置</span><br><span class="line">health_check_url = /status</span><br><span class="line">health_check_interval_s = 10</span><br><span class="line">health_check_max_failed = 3</span><br><span class="line">health_check_timeout_s = 3</span><br><span class="line"></span><br><span class="line">#frpc做反向代理，也就是说外网的机器可以连接代理，然后去访问内网的东东</span><br><span class="line">[plugin_http_proxy]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port = 6004</span><br><span class="line">plugin = http_proxy</span><br><span class="line">#代理到本地认证</span><br><span class="line">plugin_http_user = abc</span><br><span class="line">plugin_http_passwd = abc</span><br><span class="line">#反向代理还可以是sock方式</span><br><span class="line">[plugin_socks5]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port = 6005</span><br><span class="line">plugin = socks5</span><br><span class="line">#代理到本地认证</span><br><span class="line">plugin_user = abc</span><br><span class="line">plugin_passwd = abc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建一个frpc的文件访问服务</span><br><span class="line">[plugin_static_file]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port = 6006</span><br><span class="line">plugin = static_file</span><br><span class="line">plugin_local_path = /var/www/blog</span><br><span class="line">#前缀http://x.x.x.x:6000/static/</span><br><span class="line">plugin_strip_prefix = static</span><br><span class="line">#http基本认证</span><br><span class="line">plugin_http_user = abc</span><br><span class="line">plugin_http_passwd = abc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#stcp可以让自定的人去访问我们所暴露的网络服务，前提是访问我们服务的人也要运行一个frpc服务</span><br><span class="line">#我们的配置</span><br><span class="line">[secret_sshaaa]</span><br><span class="line">type = stcp</span><br><span class="line"># 只有 sk 一致的用户才能访问到此服务</span><br><span class="line">sk = abcdefg</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line"></span><br><span class="line">#另一个可以访问我们服务的货的配置</span><br><span class="line">[secret_ssh_visitor]</span><br><span class="line">type = stcp</span><br><span class="line"># stcp 的访问者</span><br><span class="line">role = visitor</span><br><span class="line"># 要访问的 stcp 代理的名字，没有端口标识，使用代理模块名称来标识</span><br><span class="line">server_name = secret_sshaaa</span><br><span class="line">sk = abcdefg</span><br><span class="line"># 绑定本地端口用于访问 ssh 服务，即目的端口是6000</span><br><span class="line">bind_addr = 127.0.0.1</span><br><span class="line">bind_port = 6000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#nat打洞 请注意 一些nat类型不可以被打洞，frps充当STUN</span><br><span class="line">#类似于stcp，只是流量不经过frps，是单方向上的打洞</span><br><span class="line">#我们配置</span><br><span class="line"># frpc.ini</span><br><span class="line">[p2p_ssh]</span><br><span class="line">type = xtcp</span><br><span class="line"># 只有 sk 一致的用户才能访问到此服务</span><br><span class="line">sk = abcdefg</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line"></span><br><span class="line">#另一个想访问p2p_ssh服务的货的配</span><br><span class="line">[p2p_ssh_visitor]</span><br><span class="line">type = xtcp</span><br><span class="line"># xtcp 的访问者</span><br><span class="line">role = visitor</span><br><span class="line"># 要访问的 xtcp 代理的名字</span><br><span class="line">server_name = p2p_ssh</span><br><span class="line">sk = abcdefg</span><br><span class="line"># 绑定本地端口用于访问 ssh 服务</span><br><span class="line">bind_addr = 127.0.0.1</span><br><span class="line">bind_port = 6000</span><br><span class="line"></span><br><span class="line">#stcp和xtcp都是将端口绑定到访问者的本地，而不是远程，通过访问本地端口来访问另一边的服务</span><br><span class="line">#因此这样很安全，因为公网上的其他人并无法访问</span><br><span class="line">ssh -oPort=6000 test@127.0.0.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;frp配置指南&quot;&gt;&lt;a href=&quot;#frp配置指南&quot; class=&quot;headerlink&quot; title=&quot;frp配置指南&quot;&gt;&lt;/a&gt;frp配置指南&lt;/h1&gt;&lt;h2 id=&quot;服务端配置&quot;&gt;&lt;a href=&quot;#服务端配置&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="技巧" scheme="http://yoursite.com/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="frp" scheme="http://yoursite.com/tags/frp/"/>
    
      <category term="内网穿透" scheme="http://yoursite.com/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>小娱路由器C5</title>
    <link href="http://yoursite.com/2019/08/10/%E5%B0%8F%E5%A8%B1%E8%B7%AF%E7%94%B1%E5%99%A8C5/"/>
    <id>http://yoursite.com/2019/08/10/小娱路由器C5/</id>
    <published>2019-08-10T09:26:35.000Z</published>
    <updated>2019-08-11T10:43:35.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小娱路由器C5"><a href="#小娱路由器C5" class="headerlink" title="小娱路由器C5"></a>小娱路由器C5</h1><p>转载：<a href="https://www.right.com.cn/forum/thread-873958-1-1.html" target="_blank" rel="noopener">论坛-小娱C5路由器使用体验</a></p><p>搬运几个可用的固件，大家可以刷看看</p><p>百度云<br>链接：<a href="https://pan.baidu.com/s/1x1giRbmVdFWHulNQYNub2w" target="_blank" rel="noopener">https://pan.baidu.com/s/1x1giRbmVdFWHulNQYNub2w</a> 提取码：e0ok</p><p>MT7621A  ,512内存，全千兆网口，一个USB口，一个SATA口 可以接硬盘  无wifi</p><p>一键刷入 BREED 软件 <a href="http://www.nas1688.com/wp-content/uploads/2019/08/XiaoYu_C5_Breed.zip" target="_blank" rel="noopener">下载地址</a>  解压密码：<a href="http://www.nas1688.com" target="_blank" rel="noopener">www.nas1688.com</a></p><p>使用了2天了 最后刷了H大的MT7621-7603-7612-512M 老毛子固件 使用基本完美。</p><p>这个固件集成功能好多，我都还没全体验完。  有去广告，酸酸乳，air2下载，TR下载</p><p>百度云<br>链接：<a href="https://pan.baidu.com/s/1x1giRbmVdFWHulNQYNub2w" target="_blank" rel="noopener">https://pan.baidu.com/s/1x1giRbmVdFWHulNQYNub2w</a> 提取码：e0ok  </p><p>拿到固件 直接一键刷入BREED， 然后进入breed 导入H大固件，自动重启就可用用了，输入192.168.123.1 进入路由器管理页面</p><p>然后关闭无线信号开关。  设DDNS动态解析，之前打电话改了公网IP，然后端口转发设定了，路由器里的防火墙记得打开允许从外网访问路由器功能开关。就可以远程操作了。</p><p>固件自动挂载硬盘，SATA口我插着硬盘， 内置有硬盘架，锁上螺丝，很稳。</p><p>小娱C5 做主路由拨号 下面连千兆12口傻瓜交换机，K2P做AP。</p><p>我远程 下载了一部 80g 4k 原盘的 驯龙高手3  试试。<br>负载30多，有时候跳20多，40多。现在稳定在15-20波动（TR下载后期）<br>路由器下有15-20个终端吧。  </p><p>应该还行。铁盒散热也不错。  </p><p>另外后面在折腾 web 环境搭载homeassistant  控制DC1插座，M1。</p><p>实现智能控制，远程下载，文件共享，家庭轻NAS。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;小娱路由器C5&quot;&gt;&lt;a href=&quot;#小娱路由器C5&quot; class=&quot;headerlink&quot; title=&quot;小娱路由器C5&quot;&gt;&lt;/a&gt;小娱路由器C5&lt;/h1&gt;&lt;p&gt;转载：&lt;a href=&quot;https://www.right.com.cn/forum/thread-
      
    
    </summary>
    
      <category term="玩具" scheme="http://yoursite.com/categories/%E7%8E%A9%E5%85%B7/"/>
    
    
      <category term="小娱" scheme="http://yoursite.com/tags/%E5%B0%8F%E5%A8%B1/"/>
    
      <category term="路由器" scheme="http://yoursite.com/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能</title>
    <link href="http://yoursite.com/2019/08/10/N1%E4%BD%9C%E4%B8%BA%E4%B8%BB%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%90%8C%E6%97%B6%E5%BC%80%E5%90%AFPPPOE%E6%8B%A8%E5%8F%B7%E3%80%81DNS%E3%80%81DHCP%E3%80%81%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%AD%89%E5%90%84%E7%A7%8D%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2019/08/10/N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能/</id>
    <published>2019-08-10T09:20:50.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能"><a href="#N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能" class="headerlink" title="N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能"></a>N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能</h1><p>转载：<a href="https://www.right.com.cn/forum/thread-572715-1-1.html" target="_blank" rel="noopener">论坛-N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能！</a></p><p>以前把N1作为旁路网关，但访问网页总是过两天就会变慢。</p><p>搞了几天，终于搞定了，现在将N1作为主路由，速度快的一逼，而且去广告等各种功能运行稳定！</p><p>先去吃饭，等晚上有空了，再把具体设置方法分享给大家。</p><p>吃完了，现在回来更新，那个谁谁谁给我扣分的，赶紧给我加回来哈，否则老子不客气！</p><p>先声明一下，设置过程中参考了以下两位高手的帖子，再次表示感谢。但具体设置过程中又有自己的各种问题，折腾了几天，终于搞定。</p><p><a href="https://www.right.com.cn/forum/thread-566793-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-566793-1-1.html</a></p><p><a href="https://www.right.com.cn/forum/thread-549757-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-549757-1-1.html</a></p><p>不扯淡了，下边进入正题：<br>1、光猫（如果不用光猫拨号的，可以不用看这部分）<br>我的是华为光猫，通过超级用户进入管理界面，关闭光猫的DHCP功能，设为桥接模式（不懂设置的自己去百度，不要问我）。<br>光猫的IP是默认的192.168.1.1。</p><p>2、N1<br>先把openwrt刷入N1的EMMC（不懂的在论坛里自己搜索），然后进入管理界面，进入“网络—接口—LAN”，右边选择“物理设置”，将“桥接接口”后边的对勾取消；下边的“端口”确保在“eth0”。<br>因为适配N1的OP是默认没有wan口的，这里要新建一个WAN口，还是在“接口”界面，选择左下方的“添加新接口”，取个名字叫“WAN”，物理设置也为“eth0”，然后设置PPPOE拨号，输入运营商给你的用户名和密码。<br>N1的IP是192.168.2.2，网关和广播都留空（这个和上边帖子不一样，那个高手是设为光猫地址192.168.1.1，我这里建议不要设置，因为N1自己拨号），DNS设置为自己喜欢的，我是设为114.114.114.114。<br>DHCP默认打开就可以了，不需要任何设置。<br>最后，打开“网络－－防火墙”，在右边的自定义规则下边的方框最下边加一条“iptables -t nat -I POSTROUTING -o pppoe-WAN -j MASQUERADE”（复制时请去掉双引号）。</p><p>3、路由器（当交换机使！）<br>之前我用K3，后来觉得网口不够，换为k2p，刷的高恪，比较稳定，IP地址为192.168.1.1，这里记得N１和交换机都不要和光猫一个网段，避免冲突。<br>把之前的WAN口关闭（高恪里设置为“不使用该接口”），把DHCP关闭，只保留wifi功能。<br>N１和光猫以及其他二级路由的网线都接在交换机k2p的LAN口。</p><p>４、各种功能<br>这个看自己喜好，OP本身会集成一些，有进一步需求的就自己再安装吧，反正都比较简单。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能&quot;&gt;&lt;a href=&quot;#N1作为主路由，同时开启PPPOE拨号、DNS、DHCP、去广告等各种功能&quot; class=&quot;headerlink&quot; title=&quot;N1作为主路由，同时开启PPPOE拨
      
    
    </summary>
    
      <category term="玩具" scheme="http://yoursite.com/categories/%E7%8E%A9%E5%85%B7/"/>
    
    
      <category term="n1" scheme="http://yoursite.com/tags/n1/"/>
    
      <category term="主路由" scheme="http://yoursite.com/tags/%E4%B8%BB%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>N1盒子docker安装adguardhome去广告</title>
    <link href="http://yoursite.com/2019/08/10/N1%E7%9B%92%E5%AD%90docker%E5%AE%89%E8%A3%85adguardhome%E5%8E%BB%E5%B9%BF%E5%91%8A/"/>
    <id>http://yoursite.com/2019/08/10/N1盒子docker安装adguardhome去广告/</id>
    <published>2019-08-10T09:13:49.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="N1盒子docker安装adguardhome去广告"><a href="#N1盒子docker安装adguardhome去广告" class="headerlink" title="N1盒子docker安装adguardhome去广告"></a>N1盒子docker安装adguardhome去广告</h1><p>转载：<a href="https://www.right.com.cn/forum/thread-870269-1-1.html" target="_blank" rel="noopener">论坛-N1盒子docker安装adguardhome去广告</a></p><p>使用docker安装adguardhome去广告分三步，代码如下：</p><h2 id="docker-pull-命令下载镜像"><a href="#docker-pull-命令下载镜像" class="headerlink" title="docker pull 命令下载镜像"></a>docker pull 命令下载镜像</h2><p><code>docker pull adguard/adguardhome:arm64-latest</code></p><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><p><code>docker run --name adguardhome -v /my/own/workdir:/opt/adguardhome/work -v /my/own/confdir:/opt/adguardhome/conf -p 53:53/tcp -p 53:53/udp -p 67:67/udp -p 69:68/tcp -p 69:68/udp -p 3339:80/tcp -p 444:443/tcp -p 853:853/tcp -p 3333:3000/tcp -d adguard/adguardhome:arm64-latest</code></p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>盒子地址:3333 初始化设置<br>盒子地址:3339 进入adguardhome控制面板<br>https的443端口被映射成了444，启用https解析时端口不要写错</p><p>上游 DNS 服务器：<br>114.114.114.114</p><p>Bootstrap DNS 服务器：<br>114.114.114.114:53</p><p>最后把要启用设备的DNS设置成 N1 的IP地址即可！！!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;N1盒子docker安装adguardhome去广告&quot;&gt;&lt;a href=&quot;#N1盒子docker安装adguardhome去广告&quot; class=&quot;headerlink&quot; title=&quot;N1盒子docker安装adguardhome去广告&quot;&gt;&lt;/a&gt;N1盒子dock
      
    
    </summary>
    
      <category term="玩具" scheme="http://yoursite.com/categories/%E7%8E%A9%E5%85%B7/"/>
    
    
      <category term="N1" scheme="http://yoursite.com/tags/N1/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="去广告" scheme="http://yoursite.com/tags/%E5%8E%BB%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>好用的粘贴板管理软件-Ditto</title>
    <link href="http://yoursite.com/2019/08/10/%E5%A5%BD%E7%94%A8%E7%9A%84%E7%B2%98%E8%B4%B4%E6%9D%BF%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/08/10/好用的粘贴板管理软件/</id>
    <published>2019-08-10T08:32:31.000Z</published>
    <updated>2019-08-11T10:43:35.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="好用的粘贴板管理软件-Ditto"><a href="#好用的粘贴板管理软件-Ditto" class="headerlink" title="好用的粘贴板管理软件-Ditto"></a>好用的粘贴板管理软件-Ditto</h1><h2 id="一、Ditto简介"><a href="#一、Ditto简介" class="headerlink" title="一、Ditto简介"></a>一、Ditto简介</h2><p>Ditto 是一款开源、免费、强大的剪贴板增强工具。可以把复制过的所有内容保存起来（可以设定保存日期或条目总数），快捷地供后续调用。还可以合并粘贴，纯文本粘贴，支持分组、置顶、快速搜索、热键粘贴功能。并且，还可以通过网络共享剪贴板内容。</p><p>主页：<a href="http://ditto-cp.sourceforge.net/" target="_blank" rel="noopener">http://ditto-cp.sourceforge.net/</a></p><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><p>平常情况下，Ditto只是系统托盘中的图标。按下热键（默认 ctrl+`）后，会出现的粘贴主界面；再点击右键会弹出功能丰富的菜单。参见下图：</p><p><img src="/images/1.1.1.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;好用的粘贴板管理软件-Ditto&quot;&gt;&lt;a href=&quot;#好用的粘贴板管理软件-Ditto&quot; class=&quot;headerlink&quot; title=&quot;好用的粘贴板管理软件-Ditto&quot;&gt;&lt;/a&gt;好用的粘贴板管理软件-Ditto&lt;/h1&gt;&lt;h2 id=&quot;一、Ditto简介
      
    
    </summary>
    
      <category term="技巧" scheme="http://yoursite.com/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="粘贴板" scheme="http://yoursite.com/tags/%E7%B2%98%E8%B4%B4%E6%9D%BF/"/>
    
      <category term="软件" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>python 库合集</title>
    <link href="http://yoursite.com/2019/08/10/python-%E5%BA%93%E5%90%88%E9%9B%86/"/>
    <id>http://yoursite.com/2019/08/10/python-库合集/</id>
    <published>2019-08-10T08:21:36.000Z</published>
    <updated>2019-08-11T10:43:35.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="140-种-Python-标准库、第三方库和外部工具都有了"><a href="#140-种-Python-标准库、第三方库和外部工具都有了" class="headerlink" title="140 种 Python 标准库、第三方库和外部工具都有了"></a>140 种 Python 标准库、第三方库和外部工具都有了</h1><p>转载来源<br>公众号：大数据（ID：hzdashuju）<br>内容摘自：《Python数据分析与数据化运营》（第2版）</p><p>为了区分不同对象的来源和类型，本文将在描述中通过以下方法进行标识：</p><ul><li>Python内置函数：Python自带的内置函数。函数无需导入，直接使用。例如要计算-3.2的绝对值，直接使用abs函数，方法是</li></ul><p><code>abs(-3.2)</code></p><ul><li>Python标准库：Python自带的标准库。Python标准库无需安装，只需要先通过import方法导入便可使用其中的方法。例如导入string模块，然后使用其中的find方法：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">string.find(<span class="string">'abcde'</span>,<span class="string">'b'</span>)</span><br></pre></td></tr></table></figure><ul><li><p>第三方库：Python的第三方库。这些库需要先进行安装（部分可能需要配置）。</p></li><li><p>外部工具：非Python写成的库或包，用于Python数据工作的相关工具。</p></li></ul><p>「推荐度」3星最高，1星最低。</p><h2 id="01-文件读写"><a href="#01-文件读写" class="headerlink" title="01 文件读写"></a>01 文件读写</h2><p>文件的读写包括常见的txt、Excel、xml、二进制文件以及其他格式的数据文本，主要用于本地数据的读写。</p><ol><li>open(name[, mode[, buffering]])</li></ol><ul><li>类型：Python内置函数</li><li>描述：Python默认的文件读写方法</li><li>推荐度：★★★</li></ul><ol start="2"><li>numpy.loadtxt、numpy.load和numpy.fromfile</li></ol><ul><li>类型：第三方库</li><li>描述：Numpy自带的读写函数，包括loadtxt、load和fromfile，用于文本、二进制文件读写</li><li>推荐度：★★★</li></ul><ol start="3"><li>pandas.read_*</li></ol><ul><li>类型：第三方库</li><li>描述：Pandas自带的read文件方法，例如ead_csv、read_fwf、read_table等，用于文本、Excel、二进制文件、HDF5、表格、SAS文件、SQL数据库、Stata文件等的读写</li><li>推荐度：★★★</li></ul><ol start="4"><li>xlrd</li></ol><ul><li>类型：第三方库</li><li>描述：用于Excel文件读取</li><li>推荐度：★★</li></ul><ol start="5"><li>xlwt</li></ol><ul><li>类型：第三方库</li><li>描述：用于Excel文件写入</li><li>推荐度：★★</li></ul><ol start="6"><li>pyexcel-xl</li></ol><ul><li>类型：第三方库</li><li>描述：用于Excel文件读写</li><li>推荐度：★★</li></ul><ol start="7"><li>xluntils</li></ol><ul><li>类型：第三方库</li><li>描述：用于Excel文件读写</li><li>推荐度：★★</li></ul><ol start="8"><li>pyExcelerator</li></ol><ul><li>类型：第三方库</li><li>描述：用于Excel文件读写</li><li>推荐度：★</li></ul><ol start="9"><li>openpyxl</li></ol><ul><li>类型：第三方库</li><li>描述：用于Excel文件读写</li><li>推荐度：★</li></ul><ol start="10"><li>lxml</li></ol><ul><li>类型：第三方库</li><li>描述：xml和HTML读取和解析</li><li>推荐度：★★★</li></ul><ol start="11"><li>xml</li></ol><ul><li>类型：Python标准库</li><li>描述：xml对象解析和格式化处理</li><li>推荐度：★★★</li></ul><ol start="12"><li>libxml2</li></ol><ul><li>类型：第三方库</li><li>描述：xml对象解析和格式化处理</li><li>推荐度：★</li></ul><ol start="13"><li>xpath</li></ol><ul><li>类型：第三方库</li><li>描述：xml对象解析和格式化处理</li><li>推荐度：★★</li></ul><ol start="14"><li>win32com</li></ol><ul><li>类型：第三方库</li><li>描述：有关Windows系统操作、Office（Word、Excel等）文件读写等的综合应用库</li><li>推荐度：★</li></ul><h2 id="02-网络抓取和解析"><a href="#02-网络抓取和解析" class="headerlink" title="02 网络抓取和解析"></a>02 网络抓取和解析</h2><p>网络抓取和解析用于从互联网中抓取信息，并对HTML对象进行处理，有关xml对象的解析和处理的库在“01 文件读写”中找到。</p><ol start="15"><li>requests</li></ol><ul><li>类型：第三方库</li><li>描述：网络请求库，提供多种网络请求方法并可定义复杂的发送信息</li><li>推荐度：★★★</li></ul><ol start="16"><li>urllib</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的库，简单的读取特定URL并获得返回的信息</li><li>推荐度：★★</li></ul><ol start="17"><li>urllib2</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的库，读取特定URL并获得返回的信息，相对于urllib可处理更多HTTP信息，例如cookie、身份验证、重定向等</li><li>推荐度：★★</li></ul><ol start="18"><li>urlparse</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的URL解析库，可自动解析URL不同的域、参数、路径等</li><li>推荐度：★★★</li></ul><ol start="19"><li>HTMLParser</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的HTML解析模块，能够很容易的实现HTML文件的分析</li><li>推荐度：★★★</li></ul><ol start="20"><li>Scapy</li></ol><ul><li>类型：第三方库</li><li>描述：分布式爬虫框架，可用于模拟用户发送、侦听和解析并伪装网络报文，常用于大型网络数据爬取</li><li>推荐度：★★★</li></ul><ol start="21"><li>Beautiful Soup</li></ol><ul><li>类型：第三方库</li><li>描述：Beautiful Soup是网页数据解析和格式化处理工具，通常配合Python的urllib、urllib2等库一起使用</li><li>推荐度：★★★</li></ul><h2 id="03-数据库连接"><a href="#03-数据库连接" class="headerlink" title="03 数据库连接"></a>03 数据库连接</h2><p>数据库连接可用于连接众多数据库以及访问通用数据库接口，可用于数据库维护、管理和增、删、改、查等日常操作。</p><ol start="22"><li>mysql-connector-python</li></ol><ul><li>类型：第三方库</li><li>描述：MySQL官方驱动连接程序</li><li>推荐度：★★★</li></ul><ol start="23"><li>pymysql</li></ol><ul><li>类型：第三方库</li><li>描述：MySQL连接库，支持Python3</li><li>推荐度：★★★</li></ul><ol start="24"><li>MySQL-python</li></ol><ul><li>类型：第三方库</li><li>描述：MySQL连接库</li><li>推荐度：★★</li></ul><ol start="25"><li>cx_Oracle</li></ol><ul><li>类型：第三方库</li><li>描述：Oracle连接库</li><li>推荐度：★★★</li></ul><ol start="26"><li>psycopg2</li></ol><ul><li>类型：第三方库</li><li>描述：Python编程语言中非常受欢迎的PostgreSQL适配器</li><li>推荐度：★★★</li></ul><ol start="27"><li>redis</li></ol><ul><li>类型：Python标准库</li><li>描述：Redis连接库</li><li>推荐度：★★★</li></ul><ol start="28"><li>pymongo</li></ol><ul><li>类型：第三方库</li><li>描述：MongoDB官方驱动连接程序</li><li>推荐度：★★★</li></ul><ol start="29"><li>HappyBase</li></ol><ul><li>类型：第三方库</li><li>描述：HBase连接库</li><li>推荐度：★★★</li></ul><ol start="30"><li>py2neo</li></ol><ul><li>类型：第三方库</li><li>描述：Neo4j连接库</li><li>推荐度：★★★</li></ul><ol start="31"><li>cassandra-driver</li></ol><ul><li>类型：第三方库</li><li>描述：Cassandra（1.2+）和DataStax Enterprise（3.1+）连接库</li><li>推荐度：★★★</li></ul><ol start="32"><li>sqlite3</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的模块，用于操作SQLite数据库</li><li>推荐度：★★★</li></ul><ol start="33"><li>pysqlite2</li></ol><ul><li>类型：第三方库</li><li>描述：SQLite 3.x连接库</li><li>推荐度：★★</li></ul><ol start="34"><li>bsddb3</li></ol><ul><li>类型：第三方库</li><li>描述：Berkeley DB连接库</li></ul><ol start="35"><li>bsddb</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的模块，提供了一个到Berkeley DB库的接口</li><li>推荐度：★★</li></ul><ol start="36"><li>dbhash</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的模块，dbhash模块提供了使用BSD数据库库打开数据库的功能。该模块镜像了提供对DBM样式数据库访问的其他Python数据库模块的接口。bsddb模块需要使用dbhash</li><li>推荐度：★★</li></ul><ol start="37"><li>adodb</li></ol><ul><li>类型：第三方库</li><li>描述：ADOdb是一个数据库抽象库，支持常见的数据和数据库接口并可自行进行数据库扩展，该库可以对不同数据库中的语法进行解析和差异化处理，具有很高的通用性</li><li>推荐度：★★★</li></ul><ol start="38"><li>SQLObject</li></ol><ul><li>类型：第三方库</li><li>描述：SQLObject是一种流行的对象关系管理器，用于向数据库提供对象接口，其中表为类、行为实例、列为属性</li><li>推荐度：★★</li></ul><ol start="39"><li>SQLAlchemy</li></ol><ul><li>类型：第三方库</li><li>描述：SQLAlchemy是Python SQL工具包和对象关系映射器，为应用程序开发人员提供了SQL的全部功能和灵活性控制</li><li>推荐度：★★</li></ul><ol start="40"><li>ctypes</li></ol><ul><li>类型：第三方库</li><li>描述：ctypes是Python的一个外部库，提供和C语言兼容的数据- 类型，可以很方便地调用C DLL中的函数</li><li>推荐度：★★★</li></ul><ol start="41"><li>pyodbc</li></ol><ul><li>类型：第三方库</li><li>描述：Python通过ODBC访问数据库的接口库</li><li>推荐度：★★★</li></ul><ol start="42"><li>Jython</li></ol><ul><li>类型：第三方库</li><li>描述：Python通过JDBC访问数据库的接口库</li><li>推荐度：★★★</li></ul><h2 id="04-数据清洗转换"><a href="#04-数据清洗转换" class="headerlink" title="04 数据清洗转换"></a>04 数据清洗转换</h2><p>数据清洗转换主用于数据正式应用之前的预处理工作。</p><ol start="43"><li>frozenset([iterable])</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回一个新的frozenset对象，可选择从iterable取得的元素</li><li>推荐度：★★★</li></ul><ol start="44"><li>int(x)</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回x的整数部分</li><li>推荐度：★★★</li></ul><ol start="45"><li>isinstance(object, classinfo)</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回object是否是指定的classinfo实例信息</li><li>推荐度：★★★</li></ul><ol start="46"><li>len(s)</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回对象的长度或项目数量</li><li>推荐度：★★★</li></ul><ol start="47"><li>long(x)</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回由字符串或数字x构造的长整型对象</li><li>推荐度：★★★</li></ul><ol start="48"><li>max(iterable[, key])</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回一个可迭代或最大的两个或多个参数中的最大项</li><li>推荐度：★★★</li></ul><ol start="49"><li>min(iterable[, key])</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回一个可迭代或最大的两个或多个参数中的最小项</li><li>推荐度：★★★</li></ul><ol start="50"><li>range(start, stop[, step])</li></ol><ul><li>类型：Python内置函数</li><li>描述：用于与for循环一起创建循环列表，通过指定start（开始）、stop（结束）和step（步长）控制迭代次数并获取循环值</li><li>推荐度：★★★</li></ul><ol start="51"><li>raw_input(prompt)</li></ol><ul><li>类型：Python内置函数</li><li>描述：捕获用户输入并作为字符串返回（不推荐使用input作为用户输入的捕获函数）</li><li>推荐度：★★★</li></ul><ol start="52"><li>round(number[, ndigits])</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回number小数点后ndigits位的四舍五入的浮点数</li><li>推荐度：★★★</li></ul><ol start="53"><li>set([iterable])</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回一个新的集合对象，可选择从iterable获取的元素</li><li>推荐度：★★★</li></ul><ol start="54"><li>slice(start, stop[, step])</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回表示由范围（start、stop、step）指定的索引集的切片对象</li><li>推荐度：★★</li></ul><ol start="55"><li>sorted(iterable[, cmp[, key[, reverse]]])</li></ol><ul><li>类型：Python内置函数</li><li>描述：从iterable的项中返回一个新的排序列表</li><li>推荐度：★★★</li></ul><ol start="56"><li>xrange(start, stop[, step])</li></ol><ul><li>类型：Python内置函数</li><li>描述：此函数与range()非常相似，但返回一个xrange对象而不是列表</li><li>推荐度：★★★</li></ul><ol start="57"><li>string</li></ol><ul><li>类型：Python标准库</li><li>描述：字符串处理库，可实现字符串查找、分割、组合、替换、去重、大小写转换及其他格式化处理</li><li>推荐度：★★★</li></ul><ol start="58"><li>re</li></ol><ul><li>类型：Python标准库</li><li>描述：正则表达式模块，在文本和字符串处理中经常使用</li><li>推荐度：★★★</li></ul><ol start="59"><li>random</li></ol><ul><li>类型：Python标准库</li><li>描述：该模块为各种分布实现伪随机数生成器，支持数据均匀分布、正态（高斯）分布、对数正态分布、负指数分布、伽马和β分布等</li><li>推荐度：★★★</li></ul><ol start="60"><li>os</li></ol><ul><li>类型：Python标准库</li><li>描述：用于新建、删除、权限修改、切换路径等目录操作，以及调用执行系统命令</li><li>推荐度：★★★</li></ul><ol start="61"><li>os.path</li></ol><ul><li>类型：Python标准库</li><li>描述：针对目录的遍历、组合、分割、判断等操作，常用于数据文件的判断、查找、合并</li><li>推荐度：★★★</li></ul><ol start="62"><li>prettytable</li></ol><ul><li>类型：Python标准库</li><li>描述：格式化表格输出模块</li><li>推荐度：★★</li></ul><ol start="63"><li>json</li></ol><ul><li>类型：Python标准库</li><li>描述：Python对象与json对象的转换</li><li>推荐度：★★★</li></ul><ol start="64"><li>base64</li></ol><ul><li>类型：Python标准库</li><li>描述：将任意二进制字符串编码和解码为文本字符串的Base16，Base32和Base64</li><li>推荐度：★★★</li></ul><h2 id="05-数据计算和统计分析"><a href="#05-数据计算和统计分析" class="headerlink" title="05 数据计算和统计分析"></a>05 数据计算和统计分析</h2><p>数据计算和统计分析主要用于数据探查、计算和初步数据分析等工作。</p><ol start="65"><li>numpy</li></ol><ul><li>类型：第三方库</li><li>描述：NumPy是Python科学计算的基础工具包，很多Python数据计算工作库都依赖它</li><li>推荐度：★★★</li></ul><ol start="66"><li>scipy</li></ol><ul><li>类型：第三方库</li><li>描述：Scipy是一组专门解决科学和工程计算不同场景的主题工具包</li><li>推荐度：★★★</li></ul><ol start="67"><li>pandas</li></ol><ul><li>类型：第三方库</li><li>描述：Pandas是一个用于Python数据分析的库，它的主要作用是进行数据分析。Pandas提供用于进行结构化数据分析的二维的表格型数据结构DataFrame，类似于R中的数据框，能提供类似于数据库中的切片、切块、聚合、选择子集等精细化操作，为数据分析提供了便捷</li><li>推荐度：★★★</li></ul><ol start="68"><li>statsmodels</li></ol><ul><li>类型：第三方库</li><li>描述：Statsmodels是Python的统计建模和计量经济学工具包，包括一些- 描述性统计、统计模型估计和统计测试，集成了多种线性回归模型、广义线性回归模型、离散数据分布模型、时间序列分析模型、非参数估计、生存分析、主成分分析、核密度估计以及广泛的统计测试和绘图等功能</li><li>推荐度：★★★</li></ul><ol start="69"><li>abs(x)</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回x的绝对值</li><li>推荐度：★★★</li></ul><ol start="70"><li>cmp(x, y)</li></ol><ul><li>类型：Python内置函数</li><li>描述：比较两个对象x和y，并根据结果返回一个整数。如果x &lt;y，则返回值为负数，如果x == y则为零，如果x&gt; y则返回值为正</li><li>推荐度：★★</li></ul><ol start="71"><li>float(x)</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回从数字或字符串x构造的浮点数</li><li>推荐度：★★★</li></ul><ol start="72"><li>pow(x, y[, z])</li></ol><ul><li>类型：Python内置函数</li><li>描述：返回x的y次幂。如果z存在，则返回x的y次幂，模z</li><li>推荐度：★★★</li></ul><ol start="73"><li>sum(iterable[, start])</li></ol><ul><li>类型：Python内置函数</li><li>描述：从左到右依次迭代，返回总和</li><li>推荐度：★★★</li></ul><ol start="74"><li>math</li></ol><ul><li>类型：Python标准库</li><li>描述：数学函数库，包括正弦、余弦、正切、余切、弧度转换、对数运算、圆周率、绝对值、取整等数学计算方法</li><li>推荐度：★★★</li></ul><ol start="75"><li>cmath</li></ol><ul><li>类型：Python标准库</li><li>描述：与math基本一致，区别是cmath运算的是复数</li><li>推荐度：★★</li></ul><ol start="76"><li>decimal</li></ol><ul><li>类型：Python标准库</li><li>描述：10进制浮点运算</li><li>推荐度：★★</li></ul><ol start="77"><li>fractions</li></ol><ul><li>类型：Python标准库</li><li>描述：分数模块提供对有理数算术的支持</li><li>推荐度：★★</li></ul><h2 id="06-自然语言处理和文本挖掘"><a href="#06-自然语言处理和文本挖掘" class="headerlink" title="06 自然语言处理和文本挖掘"></a>06 自然语言处理和文本挖掘</h2><p>自然语言处理和文本挖掘库主要用于以自然语言文本为对象的数据处理和建模。</p><ol start="78"><li>nltk</li></ol><ul><li>类型：第三方库</li><li>描述：NLTK是一个Python自然语言处理工具，它用于对自然语言进行分类、解析和语义理解。目前已经有超过50种语料库和词汇资源</li><li>推荐度：★★★</li></ul><ol start="79"><li>pattern</li></ol><ul><li>类型：第三方库</li><li>描述：Pattern是一个网络数据挖掘Python工具包，提供了用于网络挖掘（如网络服务、网络爬虫等）、自然语言处理（如词性标注、情感分析等）、机器学习（如向量空间模型、分类模型等）、图形化的网络分析模型</li><li>推荐度：★★★</li></ul><ol start="80"><li>gensim</li></ol><ul><li>类型：第三方库</li><li>描述：Gensim是一个专业的主题模型（发掘文字中隐含主题的一种统计建模方法）Python工具包，用来提供可扩展统计语义、分析纯文本语义结构以及检索语义上相似的文档</li><li>推荐度：★★★</li></ul><ol start="81"><li>结巴分词</li></ol><ul><li>类型：第三方库</li><li>描述：结巴分词是国内流行的Python文本处理工具包，分词模式分为三种模式：精确模式、全模式和搜索引擎模式，支持繁体分词、自定义词典等，是非常好的Python中文分词解决方案，可以实现分词、词典管理、关键字抽取、词性标注等</li><li>推荐度：★★★</li></ul><ol start="82"><li>SnowNLP</li></ol><ul><li>类型：第三方库</li><li>描述：SnowNLP是一个Python写的类库，可以方便的处理中文文本内容。该库是受到了TextBlob的启发而针对中文处理写的类库，和TextBlob不同的是这里没有用NLTK，所有的算法都是自己实现的，并且自带了一些训练好的字典</li><li>推荐度：★★</li></ul><ol start="83"><li>smallseg</li></ol><ul><li>类型：第三方库</li><li>描述：Smallseg是一个开源的、基于DFA的轻量级的中文分词工具包。可自定义词典、切割后返回登录词列表和未登录词列表、有一定的新词识别能力</li><li>推荐度：★★</li></ul><ol start="84"><li>spaCy</li></ol><ul><li>类型：第三方库</li><li>描述：spaCy是一个Python自然语言处理工具包，它结合Python和Cython使得自然语言处理能力达到了工业强度</li><li>推荐度：★★★</li></ul><ol start="85"><li>TextBlob</li></ol><ul><li>类型：第三方库</li><li>描述：TextBlob 是一个处理文本数据的Python库，可用来做词性标注、情感分析、文本翻译、名词短语抽取、文本分类等</li><li>推荐度：★★</li></ul><ol start="86"><li>PyNLPI</li></ol><ul><li>类型：第三方库</li><li>描述：PyNLPI是一个适合各种自然语言处理任务的集合库，可用于中文文本分词、关键字分析等，尤其重要的是其支持中英文映射，支持UTF-8和GBK编码的字符串等</li><li>推荐度：★★★</li></ul><ol start="87"><li>synonyms</li></ol><ul><li>类型：第三方库</li><li>描述：中文近义词工具包，可用于自然语言理解的很多任务：文本对齐，推荐算法，相似度计算，语义偏移，关键字提取，概念提取，自动摘要，搜索引擎等。</li><li>推荐度：★★★</li></ul><h2 id="07-图像和视频处理"><a href="#07-图像和视频处理" class="headerlink" title="07 图像和视频处理"></a>07 图像和视频处理</h2><p>图像处理和视频处理主要适用于基于图像的操作、处理、分析和挖掘，如人脸识别、图像识别、目标跟踪、图像理解等。</p><ol start="88"><li>PIL/Pillow</li></ol><ul><li>类型：第三方库</li><li>描述：PIL是一个常用的图像读取、处理和分析的库，提供了多种数据处理、变换的操作方法和属性。PIL仅支持到2.7版本且已经很久没有更新，一群志愿者基于PIL发布了新的分支Pillow。Pillow同时支持Python2和Python3并且加入很多新的功能</li><li>推荐度：★★</li></ul><ol start="89"><li>OpenCV</li></ol><ul><li>类型：第三方库</li><li>描述：OpenCV是一个强大的图像和视频工作库。它提供了多种程序接口，支持跨平台（包括移动端）应用。OpenCV的设计效率很高，它以优化的C / C ++编写，库可以利用多核处理。除了对图像进行基本处理外，还支持图像数据建模，并预制了多种图像识别引擎，如人脸识别</li><li>推荐度：★★★</li></ul><ol start="90"><li>scikit-image</li></ol><ul><li>类型：第三方库</li><li>描述：scikit-image（也称skimage）是一个图像处理库，支持颜色模式转换、滤镜、绘图、图像处理、特征检测等多种功能</li><li>推荐度：★★</li></ul><ol start="91"><li>imageop</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，对图像基本操作，包括裁剪、缩放、模式转换</li><li>推荐度：★</li></ul><ol start="92"><li>colorsys</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，实现不同图像色彩模式的转换</li><li>推荐度：★</li></ul><ol start="93"><li>imghdr</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，返回图像文件的- 类型</li><li>推荐度：★</li></ul><h2 id="08-音频处理"><a href="#08-音频处理" class="headerlink" title="08 音频处理"></a>08 音频处理</h2><p>音频处理主要适用于基于声音的处理、分析和建模，主要应用于语音识别、语音合成、语义理解等。</p><ol start="94"><li>TimeSide</li></ol><ul><li>类型：第三方库</li><li>描述：TimeSide是一个能够进行音频分析、成像、转码、流媒体和标签处理的Python框架，可以对任何音频或视频内容非常大的数据集进行复杂的处理</li><li>推荐度：★★★</li></ul><ol start="95"><li>audiolazy</li></ol><ul><li>类型：第三方库</li><li>描述：audiolazy是一个用于实时声音数据流处理的库，支持实时数据应用处理、无限数据序列表示、数据流表示等</li><li>推荐度：★★</li></ul><ol start="96"><li>pydub</li></ol><ul><li>类型：第三方库</li><li>描述：pydub支持多种格式声音文件，可进行多种信号处理（例如压缩、均衡、归一化）、信号生成（例如正弦、方波、锯齿等）、音效注册、静音处理等</li><li>推荐度：★★★</li></ul><ol start="97"><li>audioop</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，可实现对声音片段的一些常用操作</li><li>推荐度：★★</li></ul><ol start="98"><li>tinytag</li></ol><ul><li>类型：第三方库</li><li>描述：tinytag用于读取多种声音文件的元数据，涵盖MP3、OGG、OPUS、MP4、M4A、FLAC、WMA、Wave等格式</li><li>推荐度：★★</li></ul><ol start="99"><li>aifc</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，读写AIFF和AIFC文件</li><li>推荐度：★</li></ul><ol start="100"><li>sunau</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，读写Sun AU文件</li><li>推荐度：★</li></ul><ol start="101"><li>wave</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，读写WAV文件</li><li>推荐度：★★</li></ul><ol start="102"><li>chunk</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，读取EA IFF 85块格式的文件</li><li>推荐度：★</li></ul><ol start="103"><li>sndhdr</li></ol><ul><li>类型：Python标准库</li><li>描述：Python自带的函数，返回声音文件的- 类型</li><li>推荐度：★</li></ul><ol start="104"><li>ossaudiodev</li></ol><ul><li>类型：Python标准库</li><li>描述：该模块支持访问OSS（开放声音系统）音频接口</li><li>推荐度：★★★</li></ul><h2 id="09-数据挖掘-机器学习-深度学习"><a href="#09-数据挖掘-机器学习-深度学习" class="headerlink" title="09 数据挖掘/机器学习/深度学习"></a>09 数据挖掘/机器学习/深度学习</h2><p>数据挖掘、机器学习和深度学习等是Python进行数据建模和挖掘学习的核心模块。</p><ol start="105"><li>Scikit-Learn</li></ol><ul><li>类型：第三方库</li><li>描述：scikit-learn（也称SKlearn）是一个基于Python的机器学习综合库，内置监督式学习和非监督式学习机器学习方法，包括各种回归、聚类、分类、流式学习、异常检测、神经网络、集成方法等主流算法类别，同时支持预置数据集、数据预处理、模型选择和评估等方法，是一个非常完整、流行的机器学习工具库</li><li>推荐度：★★★</li></ul><ol start="106"><li>TensorFlow</li></ol><ul><li>类型：第三方库</li><li>描述：TensorFlow 是谷歌的第二代机器学习系统，内建深度学习的扩展支持，任何能够用计算流图形来表达的计算，都可以使用 TensorFlow</li><li>推荐度：★★★</li></ul><ol start="107"><li>NuPIC</li></ol><ul><li>类型：第三方库</li><li>描述：NuPIC是一个以HTM（分层时间记忆）学习算法为工具的机器智能平台。NuPIC适合于各种各样的问题，尤其适用于检测异常和预测应用</li><li>推荐度：★★★</li></ul><ol start="108"><li>PyTorch</li></ol><ul><li>类型：第三方库</li><li>描述：PyTorch是FaceBook推出的深度学习框架，它基于Python（而非lua）产生，它提供的动态计算图是显著区别于Tensorflow等其他学习框架的地方。</li><li>推荐度：★★</li></ul><ol start="109"><li>Orange</li></ol><ul><li>类型：第三方库</li><li>描述：Orange通过图形化操作界面，提供交互式数据分析功能，尤其适用于分类、聚类、回归、特征选择和交叉验证工作</li><li>推荐度：★★★</li></ul><ol start="110"><li>theano</li></ol><ul><li>类型：第三方库</li><li>描述：Theano是非常成熟的深度学习库。它与Numpy紧密集成，支持GPU计算、单元测试和自我验证</li><li>推荐度：★★★</li></ul><ol start="111"><li>keras</li></ol><ul><li>类型：第三方库</li><li>描述：Keras是一个用Python编写的高级神经网络API，能够运行在TensorFlow或者Theano之上，它的开发重点是实现快速实验</li><li>推荐度：★★</li></ul><ol start="112"><li>neurolab</li></ol><ul><li>类型：第三方库</li><li>描述：Neurolab是具有灵活网络配置和Python学习算法的基本神经网络算法库。它包含通过递归神经网络（RNN）实现的不同变体，该库是同类RNN API中最好的选择之一</li><li>推荐度：★★</li></ul><ol start="113"><li>PyLearn2</li></ol><ul><li>类型：第三方库</li><li>描述：PyLearn2是基于Theano的深度学习库，它旨在提供极大的灵活性，并使研究人员可以进行自由可控制，参数和属性的灵活、开放配置是亮点</li><li>推荐度：★★★</li></ul><ol start="114"><li>OverFeat</li></ol><ul><li>类型：第三方库</li><li>描述：OverFeat是一个深度学习库，主要用于图片分类、定位物体检测</li><li>推荐度：★★</li></ul><ol start="115"><li>Pyevolve</li></ol><ul><li>类型：第三方库</li><li>描述：Pyevolve是一个完整的遗传算法框架，也支持遗传编程</li><li>推荐度：★★</li></ul><ol start="116"><li>Caffe2</li></ol><ul><li>类型：第三方库</li><li>描述：Cafffe2也是FaceBook推出的深度学习框架，相比于PyTorch 更适合于研究，Caffe2 适合大规模部署，主要用于计算机视觉，它对图像识别的分类具有很好的应用效果</li><li>推荐度：★★</li></ul><h2 id="10-数据可视化"><a href="#10-数据可视化" class="headerlink" title="10 数据可视化"></a>10 数据可视化</h2><p>数据可视化主要用于做数据结果展示、数据模型验证、图形交互和探查等方面。</p><ol start="117"><li>Matplotlib</li></ol><ul><li>类型：第三方库</li><li>描述：Matplotlib是Python的2D绘图库，它以各种硬拷贝格式和跨平台的交互式环境生成出版质量级别的图形，开发者可以仅需要几行代码，便可以生成多种高质量图形</li><li>推荐度：★★★</li></ul><ol start="118"><li>pyecharts</li></ol><ul><li>类型：第三方库</li><li>描述：基于百度Echarts的强大的可视化工具库，其提供的图形功能众多，尤其对于复杂关系的展示能力较强</li><li>推荐度：★★★</li></ul><ol start="119"><li>seaborn</li></ol><ul><li>类型：第三方库</li><li>描述：Seaborn是在Matplotlib的基础上进行了更高级的API封装，它可以作为Matplotlib的补充</li><li>推荐度：★★★</li></ul><ol start="120"><li>bokeh</li></ol><ul><li>类型：第三方库</li><li>描述：Bokeh是一种交互式可视化库，可以在WEB浏览器中实现美观的视觉效果</li><li>推荐度：★★★</li></ul><ol start="121"><li>Plotly</li></ol><ul><li>类型：第三方库</li><li>描述：Plotly提供的图形库可以进行在线WEB交互，并提供具有出版品质的图形，支持线图、散点图、区域图、条形图、误差条、框图、直方图、热图、子图、多轴、极坐标图、气泡图、玫瑰图、热力图、漏斗图等众多图形</li><li>推荐度：★★★</li></ul><ol start="122"><li>VisPy</li></ol><ul><li>类型：第三方库</li><li>描述：VisPy是用于交互式科学可视化的Python库，旨在实现快速，可扩展和易于使用</li><li>推荐度：★★</li></ul><ol start="123"><li>PyQtGraph</li></ol><ul><li>类型：第三方库</li><li>描述：PyQtGraph是一个建立在PyQt4 / PySide和numpy之上的纯Python图形和GUI库，主要用于数学/科学/工程应用</li><li>推荐度：★★</li></ul><ol start="124"><li>ggplot</li></ol><ul><li>类型：第三方库</li><li>描述：ggplot是用Python实现的图形输出库，类似于 R中的图形展示版本</li><li>推荐度：★★★</li></ul><h2 id="11-交互学习和集成开发"><a href="#11-交互学习和集成开发" class="headerlink" title="11 交互学习和集成开发"></a>11 交互学习和集成开发</h2><p>交互学习和集成开发主要用来做Python开发、调试和集成之用，包括Python集成开发环境和IDE。</p><ol start="125"><li>IPython/ Jupyter</li></ol><ul><li>类型：第三方库</li><li>描述：IPython 是一个基于Python 的交互式shell，比默认的Python shell 好用得多，支持变量自动补全、自动缩进、交互式帮助、魔法命令、系统命令等，内置了许多很有用的功能和函数。从IPython4.0开始，IPython衍生出了IPython和Jupyter两个分支。在该分支正式出现之前，IPython其实已经拥有了ipython notebook功能，因此，Jupyter更像是一个ipython notebook的升级版。</li><li>推荐度：★★★</li></ul><ol start="126"><li>Elpy</li></ol><ul><li>类型：第三方库</li><li>描述：Elpy是Emacs用于Python的开发环境，它结合并配置了许多其他软件包，它们都是用Emacs Lisp和Python编写的</li><li>推荐度：★★</li></ul><ol start="127"><li>PTVS</li></ol><ul><li>类型：第三方库</li><li>描述：Visual Studio 的 Python 工具</li><li>推荐度：★★</li></ul><ol start="128"><li>PyCharm</li></ol><ul><li>类型：外部工具</li><li>描述：PyCharm带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、语法高亮、项目管理、代码跳转、智能提示、自动完成、单元测试、版本控制并可集成IPython、系统终端命令行等，在PyCharm里几乎就可以实现所有有关Python工作的全部过程</li><li>推荐度：★★★</li></ul><ol start="129"><li>LiClipse</li></ol><ul><li>类型：外部工具</li><li>描述：LiClipse是基于Eclipse的免费多语言 IDE，通过其中的PyDev可支持 Python开发应用</li><li>推荐度：★★</li></ul><ol start="130"><li>Spyder</li></ol><ul><li>类型：外部工具</li><li>描述：Spyder是一个开源的Python IDE，由IPython和众多流行的Python库的支持，是一个具备高级编辑、交互式测试、调试以及数字计算环境的交互式开发环境</li><li>推荐度：★★</li></ul><h2 id="12-其他Python协同数据工作工具"><a href="#12-其他Python协同数据工作工具" class="headerlink" title="12 其他Python协同数据工作工具"></a>12 其他Python协同数据工作工具</h2><p>其他Python协同数据工作工具指除了上述主题以外，其他在数据工作中常用的工具或库。</p><ol start="131"><li>tesseract-ocr</li></ol><ul><li>类型：外部工具</li><li>描述：这是一个Google支持的开源OCR图文识别项目，支持超过200种语言（包括中文），并支持自定义训练字符集，支持跨Windows、Linux、Mac OSX 多平台使用</li><li>推荐度：★★★</li></ul><ol start="132"><li>RPython</li></ol><ul><li>类型：第三方库</li><li>描述：R集成库</li><li>推荐度：★★★</li></ul><ol start="133"><li>Rpy2</li></ol><ul><li>类型：第三方库</li><li>描述：Python连接R的库</li></ul><ol start="134"><li>matpython</li></ol><ul><li>类型：第三方库</li><li>描述：MATLAB集成库</li><li>推荐度：★★★</li></ul><ol start="135"><li>Lunatic Python</li></ol><ul><li>类型：第三方库</li><li>描述：Lua集成库</li><li>推荐度：★★</li></ul><ol start="136"><li>PyCall.jl</li></ol><ul><li>类型：第三方库</li><li>描述：Julia集成库</li><li>推荐度：★★</li></ul><ol start="137"><li>PySpark</li></ol><ul><li>类型：第三方库</li><li>描述：Spark提供的Python API</li><li>推荐度：★★★</li></ul><ol start="138"><li>dumbo</li></ol><ul><li>类型：第三方库</li><li>描述：这个模块可以让Pythoner轻松的编写和运行 Hadoop 程序，程序版本比较早，可以作为参考</li><li>推荐度：★★</li></ul><ol start="139"><li>dpark</li></ol><ul><li>类型：第三方库</li><li>描述：Python对Spark的克隆版本，类MapReduce框架</li><li>推荐度：★★</li></ul><ol start="140"><li>streamparse</li></ol><ul><li>类型：第三方库</li><li>描述：Streamparse允许通过Storm对实时数据流运行Python代码</li><li>推荐度：★★★</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;140-种-Python-标准库、第三方库和外部工具都有了&quot;&gt;&lt;a href=&quot;#140-种-Python-标准库、第三方库和外部工具都有了&quot; class=&quot;headerlink&quot; title=&quot;140 种 Python 标准库、第三方库和外部工具都有了&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="语言" scheme="http://yoursite.com/categories/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="库" scheme="http://yoursite.com/tags/%E5%BA%93/"/>
    
      <category term="合集" scheme="http://yoursite.com/tags/%E5%90%88%E9%9B%86/"/>
    
  </entry>
  
</feed>
